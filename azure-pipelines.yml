name: $(Build.SourceBranch)-$(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
      - 'master'
  tags:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: Hemmeligheter
  - name: fullSha
    value: '$(Build.SourceVersion)'
  - name: imageName
    value: 'eu.gcr.io/prod-bip/ssb/klass/subsets-api'
  - name: repoName
    value: 'prod-bip/ssb/klass/subsets-api'

resources:
  repositories:
    - repository: templates
      type: github
      name: statisticsnorway/azure-pipelines-templates
      ref: refs/tags/1.1.32
      endpoint: statisticsnorway

jobs:
  - job: buildTestAndRunTest
    condition: eq(False, startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    timeoutInMinutes: 120
    displayName: 'Test/build app and Dockerimage'
    steps:
      - task: DownloadSecureFile@1
        name: dockerComposeCIBuild # use $(dockerComposeCIBuild.secureFilePath) to refer to it
        displayName: 'Download docker-compose.ci.build.yml'
        inputs:
          secureFile: 'docker-compose.ci.build.yml'
      - task: DownloadSecureFile@1
        name: sqlInit # use $(sqlInit.secureFilePath) to refer to it
        displayName: 'Download init-db.sql'
        inputs:
          secureFile: 'init-db.sql'
      - task: DockerCompose@0
        env:
          SQL_INIT_PATH: $(sqlInit.secureFilePath)
        displayName: 'Run integration test backend services'
        inputs:
          action: Run services
          containerregistrytype: Container Registry
          dockerRegistryEndpoint: dockerHubOlved
          dockerComposeFile: $(dockerComposeCIBuild.secureFilePath)
          projectName: $(Build.Repository.Name)
          qualifyImageNames: true
          buildImages: false
          abortOnContainerExit: true
          detached: true
      - task: ShellScript@2
        inputs:
          scriptPath: sethost.sh
      - task: Maven@3
        env:
          API_KLASS: "https://data.ssb.no/api/klass"
          JDBC_PS_URL: "jdbc:postgresql://localhost:5432/subsets"
        displayName: 'Maven install'
        inputs:
          mavenPomFile: 'pom.xml'
          mavenOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          testResultsFiles: '**/TEST-*.xml'
          goals: 'install'
          options: '-DskipTests=false -Dmaven.javadoc.skip=true'
      - template: 'docker/docker-build-image-and-push-to-gcr.yml@templates'
        parameters:
          imageName: $(imageName)
          repoName: $(repoName)
  - template: 'docker/docker-tag-for-production.yml@templates'
    parameters:
      tagToTag: 'master-$(fullSha)'
      gcrImageName: $(imageName)
